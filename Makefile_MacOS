# Portable Makefile: macOS native build + Windows cross-build (mingw-w64)

# macOS native compiler
CXX := clang++
CXXFLAGS := -std=c++17 -Wall -Wextra -O2
LDFLAGS :=

# Project layout
APPNAME := main
EXT := .cpp
SRCDIR := src
OBJDIR := obj
DEPDIR := dep

# Sources, objects, deps
SRC := $(wildcard $(SRCDIR)/*$(EXT))
OBJ := $(patsubst $(SRCDIR)/%$(EXT),$(OBJDIR)/%.o,$(SRC))
DEP := $(patsubst $(OBJDIR)/%.o,$(DEPDIR)/%.d,$(OBJ))

# Generate depfiles alongside objects
DEPFLAGS := -MMD -MP -MF $(DEPDIR)/$*.d

.PHONY: all mac win clean distclean rebuild

all: mac

mac: $(APPNAME)

$(APPNAME): $(OBJ)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDFLAGS)

# Build objects (ensure folders exist and write depfiles)
$(OBJDIR)/%.o: $(SRCDIR)/%$(EXT)
	@mkdir -p $(OBJDIR) $(DEPDIR)
	$(CXX) $(CXXFLAGS) $(DEPFLAGS) -c $< -o $@

-include $(DEP)

# Cross-compile for Windows using Homebrew's mingw-w64
WIN_CXX := x86_64-w64-mingw32-g++
win:
	$(WIN_CXX) -std=c++17 -O2 $(SRC) -o main.exe

clean:
	rm -rf $(OBJDIR) $(DEPDIR)

# Full cleanup (also removes binaries)
distclean: clean
	rm -f $(APPNAME) main.exe

# Force rebuild from scratch
rebuild: distclean all