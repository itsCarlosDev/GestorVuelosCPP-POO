
#include "CVuelo.h"
#include <iostream>

using namespace std;

// ============================
// TODO LIST - GESTOR DE VUELOS
// ============================

// ‚úàÔ∏è Gesti√≥n de vuelos
// TODO: Implementar funci√≥n para eliminar un vuelo (eliminarVuelo)
// TODO: Implementar funci√≥n para modificar un vuelo (modificarVuelo)
// TODO: Implementar funci√≥n para mostrar todos los vuelos actuales (vuelosActuales)

// üìä Ordenaci√≥n y b√∫squeda
// TODO: Implementar ordenaci√≥n de vuelos por precio (ordenarPorPrecio)
// TODO: Implementar ordenaci√≥n de vuelos por duraci√≥n (ordenarPorDuracion)
// TODO: Implementar b√∫squeda de vuelo por ID (buscarVueloPorID)

// üåç Rutas y conexiones
// TODO: Implementar b√∫squeda de ruta entre origen y destino (buscarRuta)
// TODO: Implementar visualizaci√≥n de todas las rutas (mostrarRutas)
// TODO: Implementar algoritmo DFS para recorridos de rutas (DFS)

// üë®‚Äç‚úàÔ∏è Gesti√≥n de pilotos
// TODO: Implementar visualizaci√≥n de experiencia del piloto (getExperiencia)
// TODO: Implementar visualizaci√≥n de cantidad de vuelos del piloto (getVuelos)
// TODO: Implementar asignaci√≥n de piloto a avi√≥n

// üßç Gesti√≥n de pasajeros y acompa√±antes
// TODO: Implementar inserci√≥n de pasajero (CPasajero)
// TODO: Implementar gesti√≥n de clase del pasajero (Business/Normal)
// TODO: Implementar asignaci√≥n de acompa√±antes al pasajero (m_Acompanantes)

// üßæ Gesti√≥n de personas
// TODO: Implementar obtenci√≥n de nombre de persona (getNombre)
// TODO: Implementar obtenci√≥n de tel√©fono de persona (getTelefono)
// TODO: Implementar obtenci√≥n de DNI de persona (getDNI)

// üõ´ Gesti√≥n de aviones
// TODO: Implementar visualizaci√≥n de datos de avi√≥n (capacidad, velocidad, ID)
// TODO: Implementar asignaci√≥n de avi√≥n a piloto

// üîß Utilidades generales
// TODO: Implementar estructura de men√∫ en consola (main menu + submen√∫s)
// TODO: Validar entradas de usuario (fechas, ID, clase, etc.)
// TODO: Integrar estructura de lista gen√©rica (CLista<T>)
// TODO: Implementar sistema de mensajes de error y validaci√≥n

void mostrarMenu() {
    cout << "\n=== GESTOR DE VUELOS ===\n";
    cout << "1. A√±adir vuelo\n";
    cout << "2. Eliminar vuelo\n";
    cout << "3. Buscar vuelo por ID\n";
    cout << "4. Mostrar vuelos actuales\n";
    cout << "5. Ordenar por precio\n";
    cout << "6. Ordenar por duraci√≥n\n";
    cout << "7. Buscar ruta entre ciudades\n";
    cout << "0. Salir\n";
    cout << "\nSelecciona una opci√≥n: ";
}

int main(int argc, char const *argv[])
{
    int opcion; // Menu selection 
    CVuelo vuelo[10]; // Array, only can be 10 fly's

    do {
        mostrarMenu();
        cin >> opcion;

        switch (opcion) {
            case 1:
                cout << "\n[A√±adir vuelo]\n";
                int id, dur, prec;
                cout << "\nIntroduce el ID del vuelo: ";
                cin >> id;
                cout << "Introduce la duraci√≥n (minutos): ";
                cin >> dur;
                cout << "Introduce el precio: ";
                cin >> prec;
                vuelo[0].crearVuelo(id, dur, prec); 
                break;
            case 2:
                cout << "[Eliminar vuelo] - Administrador\n";
                // TODO: Eliminar vuelo
                break;
            case 3:
                cout << "[Buscar vuelo por ID]\n";
                // TODO: Buscar vuelo
                break;
            case 4:
                cout << "[Mostrar vuelos actuales]\n";
                // TODO: Mostrar vuelos
                break;
            case 5:
                cout << "[Ordenar por precio]\n";
                // TODO: Ordenar por precio
                break;
            case 6:
                cout << "[Ordenar por duraci√≥n]\n";
                // TODO: Ordenar por duraci√≥n
                break;
            case 7:
                cout << "[Buscar ruta entre ciudades]\n";
                // TODO: Buscar ruta
                break;
            case 0:
                cout << "Saliendo del programa...\n";
                break;
            default:
                cout << "Opci√≥n inv√°lida. Int√©ntalo de nuevo.\n";
        }

    } while (opcion != 0);

    return 0;
}
